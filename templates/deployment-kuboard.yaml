apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/ingress: 'false'
    k8s.kuboard.cn/service: NodePort
    k8s.kuboard.cn/workload: {{ .Release.Name }}-kuboard-v3
  labels:
    k8s.kuboard.cn/name: {{ .Release.Name }}-kuboard-v3
  name: {{ .Release.Name }}-kuboard-v3
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s.kuboard.cn/name: {{ .Release.Name }}-kuboard-v3
  template:
    metadata:
      labels:
        k8s.kuboard.cn/name: {{ .Release.Name }}-kuboard-v3
    spec:
      {{- if .Values.NodeSelectorHostname.Kuboard }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.NodeSelectorHostname.Kuboard |quote }}
      {{- end }}
      containers:
        - env:
            - name: KUBOARD_ETCD_ENDPOINTS
              value: >-
                {{ .Release.Name }}-kuboard-etcd-0.{{ .Release.Name }}-kuboard-etcd:2379,{{ .Release.Name }}-kuboard-etcd-1.{{ .Release.Name }}-kuboard-etcd:2379,{{ .Release.Name }}-kuboard-etcd-2.{{ .Release.Name }}-kuboard-etcd:2379
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-kuboard-v3-config
          image: {{ .Values.Config.KuboardImage | quote }}
          imagePullPolicy: Always
          name: kuboard
          volumeMounts:
            - mountPath: "/data"
              name: kuboard-data
      volumes:
      - name: kuboard-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-kuboard-data-pvc
